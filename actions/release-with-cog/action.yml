---
name: Release using Cog
description: Release using Cog, and output the version before run, the version after run, and the changelog are emitted
# fork from <https://codeberg.org/PurpleBooth/common-pipelines/src/branch/main/actions/release-with-cog>
# License: CC0 1.0 Universal, <https://codeberg.org/PurpleBooth/common-pipelines/src/branch/main/LICENSE>
inputs:
  working-directory:
    description: The working dir to run in
    default: "."
  dry-run:
    description: If true, no git tag or commit will be created
    default: "false"
    required: false
  dry-run-on-non-default-branch:
    description: If true, no git tag or commit will be created if not on default branch
    default: "true"
    required: false
  cog_bump_args:
    description: Additional arguments to pass to `cog bump`, e.g. `--major` or `--minor`
    default: ""
    required: false
  cog_changelog_args:
    description: Additional arguments to pass to `cog changelog`, e.g. `--unreleased`
    default: "--template remote"
    required: false
  remote:
    description: Remote server name for changelog generation (e.g., github.com, forgejo.example.com)
    required: false
  owner:
    description: Repository owner for changelog generation
    required: false
  repo:
    description: Repository name for changelog generation
    required: false
  create-forgejo-release:
    description: If true, create a Forgejo release for the new tag
    default: "true"
    required: false
  update_cog_toml:
    description: If true, update cog.toml with remote/owner/repo if missing
    default: "true"
    required: false
  pr_changelog_pattern:
    description: "Generate the changelog in the given spec range for PRs"
    required: false
    default: "origin/${{ env.GITHUB_BASE_REF }}..HEAD"
  comment_header:
    description: "Header text for the changelog comment"
    required: false
    default: "## ðŸ“‹ Changelog"
  comment_footer:
    description: "Footer text for the changelog comment"
    required: false
    default: "*Generated by [cocogitto](https://github.com/cocogitto/cocogitto)*"
  forgejo_token:
    description: "Forgejo API token"
    required: false
    default: "${{ env.GITHUB_TOKEN }}"
  forgejo_server_url:
    description: "Forgejo server URL for API calls"
    required: false
    default: "${{ env.GITHUB_SERVER_URL }}"
outputs:
  current_version:
    value: ${{ steps.release_with_cog.outputs.current_version }}
    description: The version after the bump
  previous_version:
    value: ${{ steps.release_with_cog.outputs.previous_version }}
    description: The version prior to bump
  changelog:
    value: ${{ steps.release_with_cog.outputs.changelog }}
    description: Changelog since last release in markdown
  forgejo_release_url:
    value: ${{ fromJson(steps.release_with_cog.outputs.forgejo_release_output).html_url }}
    description: |
      URL of the created Forgejo release.
      Example: https://forgejo.example.com/owner/repo/releases/tag/v1.2.3
  forgejo_release_output:
    value: ${{ steps.release_with_cog.outputs.forgejo_release_output }}
    description: |
      Output from the Forgejo API when creating the release.
  comment_id:
    value: ${{ steps.release_with_cog.outputs.comment_id }}
    description: "ID of the created or updated comment (PR events only)"
  comment_url:
    value: ${{ steps.release_with_cog.outputs.comment_url }}
    description: "URL of the created or updated comment (PR events only)"

runs:
  using: composite
  steps:
    - name: Configure Git User
      uses: https://git.h.oluflorenzen.de/mirrors/codeberg.PurpleBooth.common-pipelines/actions/configure-git-user@0.31.3
    - name: Install yq
      uses: https://git.h.oluflorenzen.de/mirrors/codeberg.PurpleBooth.common-pipelines/actions/install-yq@0.31.3
    - name: Install jq
      uses: https://git.h.oluflorenzen.de/mirrors/codeberg.PurpleBooth.common-pipelines/actions/install-jq@0.31.3
    - name: Install cocogitto
      uses: https://git.h.oluflorenzen.de/mirrors/codeberg.PurpleBooth.common-pipelines/actions/install-cocogitto@0.31.3
    - name: Install uv and python
      uses: https://github.com/astral-sh/setup-uv@v6
      with:
        enable-cache: true
        activate-environment: true
    - name: Install python packages
      shell: bash
      run: uv pip install -r actions/release-with-cog/requirements.txt

    - name: Run release-with-cog Python script
      id: release_with_cog
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        python3 actions/release-with-cog/release_with_cog.py
      continue-on-error: false
